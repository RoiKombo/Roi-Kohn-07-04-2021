{"version":3,"sources":["components/Header.js","actions/types.js","actions/clientActions.js","components/SearchBar.js","components/FiveDayForecast.js","hooks/useLocalStorage.js","components/WeatherPage.js","components/FavoritesPage.js","reducers/clientReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["NavBar","Styled","div","NavTxt","button","Header","to","label","icon","SUGGESTIONS","GET_WEATHER","CURRENT_CONDITIONS","FAVORITES_CONDITIONS","API_KEY","getWeather","cityKey","dispatch","console","log","fetch","then","res","json","weeklyForecast","type","payload","catch","err","getCurrentConditions","name","currentConditions","currentConditionsPayload","cityName","key","Search","connect","state","data","getAutoComplete","query","suggestions","getCities","getForecast","getCurrent","useState","inputCity","setinputCity","useEffect","checkCityName","filter","city","LocalizedName","value","length","Key","displayCities","map","field","onChange","e","RegExp","test","completeMethod","undefined","DailyForeCast","Dailys","DailyForecasts","forecast","index","moment","Date","format","Day","IconPhrase","Temperature","Minimum","Value","Maximum","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","CustomCard","img","h1","currentCity","favorites","setFavorites","cityFavorite","setCityFavorite","WeatherText","Metric","onClick","newFav","reduce","arr","favs","makeFavorite","className","FavCity","Favorites","favoritesConditions","getFavoritesConditions","Promise","all","u","responses","FavoritesConditions","getFavConditions","history","useHistory","convertCityName","url","noStart","slice","indexOf","replace","push","goToMain","MobileLink","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","component","FavoritesPage","WeatherPage","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bf1c0da.chunk.js","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\nimport { Button } from 'primereact/button';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = Styled.div`\n    width: 100vw;\n    display:flex;\n    justify-content: space-between;\n    background-color: #553074;\n`;\nconst NavBtn = Styled.button`\n    display:flex;\n    justify-content: flex-end;\n`;\nconst NavTxt = Styled.div`\n    display:flex;\n    justify-content: flex-start;\n    color: white;\n`;\n\nexport default function Header() {\n  return (\n    <NavBar>\n      <NavTxt>HEROLO weather task</NavTxt>\n      <div>\n        <Link to=\"/\">\n          <Button label=\"HOME\" icon=\"pi pi-home\" />\n        </Link>\n        <Link to=\"/favorites\">\n          <Button label=\"FAVORITES\" icon=\"pi pi-star-o\" />\n        </Link>\n      </div>\n    </NavBar>\n  );\n}\n","export const SUGGESTIONS = 'SUGGESTIONS';\nexport const GET_WEATHER = 'GET_WEATHER';\nexport const CURRENT_CONDITIONS = 'CURRENT_CONDITIONS';\nexport const FAVORITES_CONDITIONS = 'FAVORITES_CONDITIONS';\n","import {\n  GET_WEATHER,\n  SUGGESTIONS,\n  CURRENT_CONDITIONS,\n  FAVORITES_CONDITIONS,\n} from './types';\n\nconst API_KEY = 'jXiwGd5fgeVXVG8lKaClg4D6GlAGEz8q'; //  >>>>>> CHANGE TO ENV VARIABLE <<<<<\n\nexport const getAutoComplete = (query) => (dispatch) => {\n  console.log('getAutoComplete', query);\n  fetch(\n    `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\n    // 'te.json'\n  )\n    .then((res) => res.json())\n    .then((suggestions) =>\n      dispatch({\n        type: SUGGESTIONS,\n        payload: suggestions,\n      })\n    )\n    .catch((err) => console.log('faild to get autoComplete API'));\n};\n\nexport const getWeather = (cityKey) => (dispatch) => {\n  console.log('getWeather', cityKey);\n  fetch(\n    `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${API_KEY}&metric=true`\n    // 'TelAvivWeather.json'\n  )\n    .then((res) => res.json())\n    .then((weeklyForecast) =>\n      dispatch({\n        type: GET_WEATHER,\n        payload: weeklyForecast,\n      })\n    )\n    .catch((err) => console.log('faild to get 5 day foreCast'));\n};\n\nexport const getCurrentConditions = (cityKey, name) => (dispatch) => {\n  console.log('getcurrent', cityKey, name);\n  fetch(\n    `http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${API_KEY}`\n    // 'TelAvivCurrent.json'\n  )\n    .then((res) => res.json())\n    .then((currentConditions) => {\n      const currentConditionsPayload = currentConditions[0];\n      dispatch({\n        type: CURRENT_CONDITIONS,\n        payload: {\n          ...currentConditionsPayload,\n          cityName: name,\n          key: cityKey,\n        },\n      });\n    })\n    .catch((err) => console.log('faild to get current conditions'));\n};\n\nexport const getFavoritesConditions = (favorites) => (dispatch) => {\n  console.log('FavoritesConditions', favorites);\n  Promise.all(\n    favorites.map((u) =>\n      fetch(\n        `http://dataservice.accuweather.com/currentconditions/v1/${u.cityKey}?apikey=${API_KEY}`\n        // 'TelAvivCurrent.json'\n      )\n    )\n  )\n    .then((responses) => Promise.all(responses.map((res) => res.json())))\n    .then((FavoritesConditions) => {\n      dispatch({\n        type: FAVORITES_CONDITIONS,\n        payload: FavoritesConditions,\n      });\n    })\n    .catch((err) => console.log('faild to get favorite conditions'));\n};\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { connect } from 'react-redux';\nimport {\n  getAutoComplete,\n  getWeather,\n  getCurrentConditions,\n} from '../actions/clientActions';\n\nconst Search = Styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nconst SearchBar = ({\n  data,\n  getAutoComplete: getCities,\n  getWeather: getForecast,\n  getCurrentConditions: getCurrent,\n}) => {\n  const [inputCity, setinputCity] = useState();\n  const { suggestions = [] } = data;\n\n  const searchCity = () => {\n    console.log('inputCity', inputCity);\n    inputCity !== undefined && getCities(inputCity);\n  };\n\n  useEffect(() => {\n    console.log('inputCity', inputCity);\n    const checkCityName = suggestions.filter(\n      (city) => city.LocalizedName === inputCity.value\n    );\n    console.log('checkCityName', checkCityName);\n    checkCityName.length > 0 && getForecast(checkCityName[0].Key);\n    checkCityName.length > 0 &&\n      getCurrent(checkCityName[0].Key, checkCityName[0].LocalizedName);\n  }, [inputCity]);\n\n  const displayCities = suggestions.map((city) => ({\n    label: city.LocalizedName,\n    value: city.LocalizedName,\n  }));\n\n  const checkEnglishInput = (value) => {\n    const englishRegex = new RegExp(/(^$|^[a-zA-Z ]+$)/);\n    englishRegex.test(value)\n      ? setinputCity(value)\n      : console.log('search accepts english letters only');\n  };\n\n  return (\n    <Search>\n      <AutoComplete\n        value={inputCity}\n        suggestions={displayCities}\n        field=\"value\"\n        onChange={(e) => checkEnglishInput(e.value)}\n        completeMethod={searchCity}\n        type=\"a-z\"\n      />\n    </Search>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nexport default connect(mapStateToProps, {\n  getAutoComplete,\n  getWeather,\n  getCurrentConditions,\n})(SearchBar);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Styled from 'styled-components';\nimport moment from 'moment';\n\nconst DailyForeCast = Styled.div`\n    padding: 1.2rem;\n    background-color: #d5ecc2;\n    margin: 5px\n\n`;\nconst Dailys = Styled.div`\n    display: flex;\n    justify-content: space-around;\n`;\n\nconst FiveDayForecast = ({ data }) => {\n  console.log('DailyForecasts', data);\n  return (\n    <Dailys>\n      {data?.weeklyForecast?.DailyForecasts?.map((forecast, index) => (\n        <DailyForeCast key={index}>\n          {moment(forecast.Date).format('dddd')}\n          <p>{forecast.Day.IconPhrase}</p>\n          <p>{forecast.Temperature.Minimum.Value}°</p>\n          <p>{forecast.Temperature.Maximum.Value}°</p>\n        </DailyForeCast>\n      ))}\n    </Dailys>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\nexport default connect(mapStateToProps)(FiveDayForecast);\n","import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React, { useState, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { Button } from 'primereact/button';\nimport { connect } from 'react-redux';\n\nimport SearchBar from './SearchBar';\nimport FiveDayForecast from './FiveDayForecast';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { getWeather, getCurrentConditions } from '../actions/clientActions';\n\nconst Search = Styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0;\n`;\nconst CustomCard = Styled.div`   \n    display: flex;\n    flex-direction: column;\n    width: 80%;background: #ffffff;\n    color: #495057;\n    box-shadow:  3px 3px 17px #e1e1e3, -3px -3px 17px #ffffff;\n    border-radius: 15px;\n    margin: 0 0 30px 10px;\n    padding: 23px;\n    flex-grow: 1;\n    margin: auto;\n`;\nconst TopFlex = Styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;   \n`;\nconst FavBtn = Styled.button`\n     display: flex;\n    justify-content: flex-end;\n`;\nconst CityImg = Styled.img`\n    width: 100px;\n    height: 100px;\n`;\nconst CityDetails = Styled.div`\n    display: flex;\n    justify-content: flex-start;\n`;\n\nconst TodayWeather = Styled.h1`\n    display: flex;\n    justify-content: center;\n`;\n\nconst WeatherPage = ({\n  data,\n  getWeather: getForecast,\n  getCurrentConditions: getCurrent,\n  currentCity,\n}) => {\n  console.log('current', currentCity);\n  const [favorites, setFavorites] = useLocalStorage('favorites', []);\n  const [cityFavorite, setCityFavorite] = useState(false);\n\n  // >>> this use effect worked before with connect, now checked if could work with useSelect and usedispatch\n  useEffect(() => {\n    getForecast(215854);\n    getCurrent(215854, 'Tel Aviv');\n  }, []);\n\n  const makeFavorite = ({ cityName, key }) => {\n    const city =\n      favorites.length > 0\n        ? favorites.filter((item) => {\n            if (item.cityName === cityName) return item;\n          })\n        : [];\n    console.log('index', city, favorites, cityName, key);\n    if (city.length > 0) {\n      // remove favorite city from local storage\n      setCityFavorite(false);\n      const newFav = favorites.reduce((arr, item) => {\n        if (item.cityName !== cityName) {\n          return [...arr, item];\n        }\n        return arr;\n      }, []);\n      setFavorites(newFav);\n    } else {\n      // add favorite city to local storage\n      setCityFavorite(true);\n      console.log('set fav', cityName, key);\n      const favs = favorites.length > 0 ? favorites : [];\n      setFavorites([...favs, { cityName, key }]);\n    }\n  };\n  // Make button active / inactive according to local storage favorites\n  useEffect(() => {\n    const city =\n      favorites.length > 0\n        ? favorites.filter((item) => {\n            if (item.cityName === currentCity) return item;\n          })\n        : [];\n    city.length > 0 ? setCityFavorite(true) : setCityFavorite(false);\n  }, [currentCity]);\n  // console.log('data.currentConditions', data.currentConditions);\n  return (\n    <div>\n      <div>\n        <SearchBar />\n      </div>\n      <CustomCard>\n        {data.currentConditions.WeatherText && (\n          <div>\n            <div>{data.currentConditions.cityName}</div>\n            <div>{data.currentConditions.WeatherText}</div>\n            <div>{data.currentConditions.Temperature.Metric.Value}°</div>\n          </div>\n        )}\n\n        <Button\n          onClick={() => makeFavorite(data.currentConditions)}\n          icon=\"pi pi-star-o\"\n          className={\n            !cityFavorite\n              ? 'p-button-rounded p-button-secondary p-button-outlined'\n              : 'p-button-rounded p-button-secondary'\n          }\n        />\n\n        <FiveDayForecast />\n      </CustomCard>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  currentCity: state.data.currentConditions.cityName,\n});\n\nexport default connect(mapStateToProps, {\n  getWeather,\n  getCurrentConditions,\n})(WeatherPage);\n","/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport {\n  getFavoritesConditions,\n  getWeather,\n  getCurrentConditions,\n} from '../actions/clientActions';\n\nconst FavCity = Styled.div`\n    \n    padding: 1.2rem;\n    background-color: #d5ecc2;\n    margin: 5px\n`;\nconst Favorites = Styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nconst FavoritesPage = ({\n  getFavoritesConditions: getFavConditions,\n  favoritesConditions,\n  getWeather: getForecast,\n  getCurrentConditions: getCurrent,\n}) => {\n  const [favorites, setFavorites] = useLocalStorage('favorites');\n  console.log('favorites', favorites);\n  const history = useHistory();\n\n  useEffect(() => {\n    getFavConditions(favorites);\n  }, []);\n\n  const convertCityName = (url) => {\n    const noStart = url.slice(31);\n    const index = noStart.indexOf('/');\n    const cityKebab = noStart.slice(0, index);\n    return cityKebab.replace('-', ' ');\n  };\n  console.log(\n    'convertCityName',\n    convertCityName(\n      'http://m.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us'\n    )\n  );\n  const goToMain = (url) => {\n    const noStart = url.slice(63);\n    const index = noStart.indexOf('?');\n    const cityKey = noStart.slice(0, index);\n    getForecast(cityKey);\n    getCurrent(cityKey, convertCityName(url));\n    history.push('/');\n  };\n  return (\n    <div>\n      <h1>\n        This are my favorites, there are many favorites but these ones are mine\n      </h1>\n      <Favorites>\n        {favoritesConditions.map((item, index) => (\n          <FavCity onClick={() => goToMain(item[0].MobileLink)} key={index}>\n            <div>{convertCityName(item[0].MobileLink)}</div>\n            <div>{item[0].WeatherText}</div>\n            <div>{item[0].Temperature.Metric.Value}°</div>\n          </FavCity>\n        ))}\n      </Favorites>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  favoritesConditions: state.data.favoritesConditions,\n  currentCity: state.data.currentConditions.cityName,\n});\n\nexport default connect(mapStateToProps, {\n  getFavoritesConditions,\n  getWeather,\n  getCurrentConditions,\n})(FavoritesPage);\n","import {\n  GET_WEATHER,\n  SUGGESTIONS,\n  CURRENT_CONDITIONS,\n  FAVORITES_CONDITIONS,\n} from '../actions/types';\n\nconst initialState = {\n  suggestions: [],\n  weeklyForecast: {},\n  currentConditions: {},\n  favoritesConditions: [],\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SUGGESTIONS:\n      return {\n        ...state,\n        suggestions: action.payload,\n      };\n    case GET_WEATHER:\n      return {\n        ...state,\n        weeklyForecast: action.payload,\n      };\n    case CURRENT_CONDITIONS:\n      return {\n        ...state,\n        currentConditions: action.payload,\n      };\n    case FAVORITES_CONDITIONS:\n      return {\n        ...state,\n        favoritesConditions: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clientReducer from './clientReducer';\n\nexport default combineReducers({\n  data: clientReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import { Provider } from 'react-redux';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport WeatherPage from './components/WeatherPage';\nimport FavoritesPage from './components/FavoritesPage';\nimport store from './store';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/favorites\" component={FavoritesPage} />\n          <Route path=\"/\" component={WeatherPage} exact />\n        </Switch>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}