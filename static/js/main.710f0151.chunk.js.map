{"version":3,"sources":["components/Header.js","actions/types.js","actions/clientActions.js","components/SearchBar.js","utils.js","components/FiveDayForecast.js","hooks/useLocalStorage.js","components/WeatherPage.js","components/FavoritesPage.js","reducers/clientReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["TopFlex","Styled","div","NavBar","NavBtns","NavTxt","MyBtn","MyLink","Link","Header","to","SUGGESTIONS","GET_WEATHER","CURRENT_CONDITIONS","FAVORITES_CONDITIONS","API_KEY","getWeather","cityKey","dispatch","fetch","then","res","json","weeklyForecast","type","payload","catch","err","console","log","getCurrentConditions","name","currentConditions","currentConditionsPayload","cityName","key","Search","connect","state","data","getAutoComplete","query","suggestions","getCities","getForecast","getCurrent","useState","inputCity","setinputCity","useEffect","checkCityName","filter","city","LocalizedName","value","length","Key","displayCities","map","label","field","onChange","e","completeMethod","undefined","convertTempUnit","fahrenheit","Math","floor","DailyForeCast","Dailys","Day","DailyForecasts","forecast","index","moment","Date","format","IconPhrase","Temperature","Minimum","Value","Maximum","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","CustomCard","DisplayedCity","DisplayedCityConditions","SelectedConditions","Devider","SideBySide","MyButton","Button","currentCity","favorites","setFavorites","cityFavorite","setCityFavorite","unit","setUnit","unitOptions","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","WeatherText","Metric","options","onClick","newFav","reduce","arr","favs","makeFavorite","icon","className","FavCity","Favorites","Heading","CityName","favoritesConditions","getFavoritesConditions","Promise","all","u","responses","FavoritesConditions","getFavConditions","history","useHistory","convertCityName","url","noStart","slice","indexOf","replace","push","goToMain","MobileLink","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","component","FavoritesPage","WeatherPage","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710f0151.chunk.js","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst TopFlex = Styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width:100%   \n`;\nconst NavBar = Styled.div`\n    width: 100%;\n    display:flex;\n    justify-content: space-between;\n    box-shadow: 0 0 4px rgb(0 0 0 / 25%);\n    border-bottom: 1px solid var(--surface-d);\n`;\nconst NavBtns = Styled.div`\n    justify-content: flex-end;\n      @media (max-width: 400px){\n        display: flex;\n      }\n`;\nconst NavTxt = Styled.div`\n    display:flex;\n    justify-content: flex-start;\n    color: var(--black);\n    font-size: var(--heading-2);\n    font-weight:400;\n    padding: 1rem;\n      @media (max-width: 400px){\n        font-size: var(--heading-3);\n        padding: 1rem;\n      }\n`;\nconst MyBtn = Styled.div`\n  display:inline-block;\n  padding: 0.5rem 1rem;\n  margin: 0.5rem;\n  background-color:#FBC02D;\n  border-radius: 5px;\n  text-align: center;\n    @media (max-width: 400px){\n      display:inline-block;\n      padding: 0.2rem 0.5rem;\n      font-size: var(--heading-4);\n    }\n`;\nconst MyLink = Styled(Link)`\n  text-decoration: none;\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;\n\nexport default function Header() {\n  return (\n    <NavBar>\n      <TopFlex>\n        <NavTxt>HEROLO weather</NavTxt>\n        <NavBtns>\n          <MyLink to=\"/\">\n            <MyBtn>HOME</MyBtn>\n          </MyLink>\n          <MyLink to=\"/favorites\">\n            <MyBtn>FAVORITES</MyBtn>\n          </MyLink>\n        </NavBtns>\n      </TopFlex>\n    </NavBar>\n  );\n}\n","export const SUGGESTIONS = 'SUGGESTIONS';\nexport const GET_WEATHER = 'GET_WEATHER';\nexport const CURRENT_CONDITIONS = 'CURRENT_CONDITIONS';\nexport const FAVORITES_CONDITIONS = 'FAVORITES_CONDITIONS';\n","import {\n  GET_WEATHER,\n  SUGGESTIONS,\n  CURRENT_CONDITIONS,\n  FAVORITES_CONDITIONS,\n} from './types';\n\n// > > > > > ADD API KEY HERE < < < < <\nconst API_KEY = 'qsO3FQdbBZfCXPKSU4QsFggDHGosuTIP';\n// > > > > >\n\nexport const getAutoComplete = (query) => (dispatch) => {\n  fetch(\n    `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\n    // 'json/tSuggest.json'\n  )\n    .then((res) => res.json())\n    .then((suggestions) =>\n      dispatch({\n        type: SUGGESTIONS,\n        payload: suggestions,\n      })\n    )\n    .catch((err) => console.log('faild to get autoComplete API'));\n};\n\nexport const getWeather = (cityKey) => (dispatch) => {\n  fetch(\n    `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${API_KEY}&metric=true`\n    // 'TelAvivWeather.json'\n  )\n    .then((res) => res.json())\n    .then((weeklyForecast) =>\n      dispatch({\n        type: GET_WEATHER,\n        payload: weeklyForecast,\n      })\n    )\n    .catch((err) => console.log('faild to get 5 day foreCast'));\n};\n\nexport const getCurrentConditions = (cityKey, name) => (dispatch) => {\n  fetch(\n    `https://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${API_KEY}`\n    // 'TelAvivCurrent.json'\n  )\n    .then((res) => res.json())\n    .then((currentConditions) => {\n      const currentConditionsPayload = currentConditions[0];\n      dispatch({\n        type: CURRENT_CONDITIONS,\n        payload: {\n          ...currentConditionsPayload,\n          cityName: name,\n          key: cityKey,\n        },\n      });\n    })\n    .catch((err) => console.log('faild to get current conditions'));\n};\n\nexport const getFavoritesConditions = (favorites = []) => (dispatch) => {\n  Promise.all(\n    favorites.map((u) =>\n      fetch(\n        `https://dataservice.accuweather.com/currentconditions/v1/${u.key}?apikey=${API_KEY}`\n        // 'TelAvivCurrent.json'\n      )\n    )\n  )\n    .then((responses) => Promise.all(responses.map((res) => res.json())))\n    .then((FavoritesConditions) => {\n      dispatch({\n        type: FAVORITES_CONDITIONS,\n        payload: FavoritesConditions,\n      });\n    })\n    .catch((err) => console.log('faild to get favorite conditions'));\n};\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { connect } from 'react-redux';\nimport {\n  getAutoComplete,\n  getWeather,\n  getCurrentConditions,\n} from '../actions/clientActions';\n\nconst Search = Styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nconst SearchBar = ({\n  data,\n  getAutoComplete: getCities,\n  getWeather: getForecast,\n  getCurrentConditions: getCurrent,\n}) => {\n  const [inputCity, setinputCity] = useState();\n  const { suggestions = [] } = data;\n\n  const searchCity = () => {\n    inputCity !== undefined && getCities(inputCity);\n  };\n  // getWeather & getCurrent pass key to api\n  useEffect(() => {\n    const checkCityName = suggestions.filter(\n      (city) => city.LocalizedName === inputCity.value\n    );\n    checkCityName.length > 0 && getForecast(checkCityName[0].Key);\n    checkCityName.length > 0 &&\n      getCurrent(checkCityName[0].Key, checkCityName[0].LocalizedName);\n  }, [inputCity]);\n\n  const displayCities = suggestions.map((city) => ({\n    label: city.LocalizedName,\n    value: city.LocalizedName,\n  }));\n\n  return (\n    <Search>\n      <AutoComplete\n        value={inputCity}\n        suggestions={displayCities}\n        field=\"value\"\n        onChange={(e) => setinputCity(e.value)}\n        completeMethod={searchCity}\n        type=\"a-z\"\n      />\n    </Search>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nexport default connect(mapStateToProps, {\n  getAutoComplete,\n  getWeather,\n  getCurrentConditions,\n})(SearchBar);\n","export const convertTempUnit = (fahrenheit, value) => {\n  if (fahrenheit) {\n    const matric = Math.floor(value / 5) * 9 + 32;\n    return matric;\n  }\n  return value;\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Styled from 'styled-components';\nimport moment from 'moment';\nimport { convertTempUnit } from '../utils';\n\nconst DailyForeCast = Styled.div`\n    padding: 1.2rem;\n    margin: 5px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n    border-radius: 10px;\n    width: 180px;\n    text-align: center;\n      @media (max-width: 400px){\n        width: 100%;\n      }\n`;\nconst Dailys = Styled.div`\n    display: flex;\n    justify-content: space-around;\n      @media (max-width: 400px){\n        flex-direction: column;\n        justify-content: space-between;\n      }\n`;\nconst Day = Styled.div`\n    font-size: var(--heading-4);\n    font-weight: 400;\n`;\n\nconst FiveDayForecast = ({ data, fahrenheit }) => (\n  <Dailys>\n    {data?.weeklyForecast?.DailyForecasts?.map((forecast, index) => (\n      <DailyForeCast key={index}>\n        <Day>{moment(forecast.Date).format('dddd')}</Day>\n        <p>{forecast.Day.IconPhrase}</p>\n        <p>\n          {convertTempUnit(fahrenheit, forecast.Temperature.Minimum.Value)}°\n        </p>\n        <p>\n          {convertTempUnit(fahrenheit, forecast.Temperature.Maximum.Value)}°\n        </p>\n      </DailyForeCast>\n    ))}\n  </Dailys>\n);\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\nexport default connect(mapStateToProps)(FiveDayForecast);\n","import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React, { useState, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { Button } from 'primereact/button';\nimport { connect } from 'react-redux';\nimport { SelectButton } from 'primereact/selectbutton';\nimport SearchBar from './SearchBar';\nimport FiveDayForecast from './FiveDayForecast';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { getWeather, getCurrentConditions } from '../actions/clientActions';\nimport { convertTempUnit } from '../utils';\n\nconst Search = Styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0;\n`;\nconst CustomCard = Styled.div`   \n    display: flex;\n    flex-direction: column;\n    width: 80%;background: #ffffff;\n    color: var(--black);\n    box-shadow:  3px 3px 17px #e1e1e3, -3px -3px 17px #ffffff;\n    border-radius: 15px;\n    margin: 10px 0 0 0;\n    padding: 23px;\n    flex-grow: 1;\n    margin: auto;\n      @media (max-width: 400px){\n        width: 100%;\n      }\n`;\nconst TopFlex = Styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;   \n`;\nconst DisplayedCity = Styled.div`\n  font-size: var(--heading-3);\n  font-weight: 400;\n`;\nconst DisplayedCityConditions = Styled.div`\n    font-size: var(--heading-3);\n`;\nconst SelectedConditions = Styled.div`\n    text-align: center;\n`;\nconst Devider = Styled.div`\n    border-top: 1px solid #eee;\n    margin: 1.5rem 0rem 1.5rem 0rem;\n`;\nconst SideBySide = Styled.div`\n  display: flex;\n`;\nconst MyButton = Styled(Button)`\n  margin-left: 15px;\n`;\n\nconst WeatherPage = ({\n  data,\n  getWeather: getForecast,\n  getCurrentConditions: getCurrent,\n  currentCity,\n}) => {\n  const [favorites, setFavorites] = useLocalStorage('favorites', []);\n  const [cityFavorite, setCityFavorite] = useState(false);\n\n  const [unit, setUnit] = useState('°C');\n  const unitOptions = ['°C', '°F'];\n\n  useEffect(() => {\n    if (currentCity === undefined) {\n      if (navigator.geolocation) {\n        getForecast(215854);\n        getCurrent(215854, 'Tel Aviv');\n      } else {\n        navigator.geolocation.getCurrentPosition((position) => {\n          const { latitude } = position.coords;\n          const { longitude } = position.coords;\n        });\n      }\n    }\n  }, [currentCity]);\n\n  const makeFavorite = ({ cityName, key }) => {\n    const city =\n      favorites.length > 0\n        ? favorites.filter((item) => {\n            if (item.cityName === cityName) return item;\n          })\n        : [];\n    if (city.length > 0) {\n      // remove favorite city from local storage\n      setCityFavorite(false);\n      const newFav = favorites.reduce((arr, item) => {\n        if (item.cityName !== cityName) {\n          return [...arr, item];\n        }\n        return arr;\n      }, []);\n      setFavorites(newFav);\n    } else {\n      // add favorite city to local storage\n      setCityFavorite(true);\n      const favs = favorites.length > 0 ? favorites : [];\n      setFavorites([...favs, { cityName, key }]);\n    }\n  };\n  // Make button active / inactive according to local storage favorites\n  useEffect(() => {\n    const city =\n      favorites.length > 0\n        ? favorites.filter((item) => {\n            if (item.cityName === currentCity) return item;\n          })\n        : [];\n    city.length > 0 ? setCityFavorite(true) : setCityFavorite(false);\n  }, [currentCity]);\n\n  return (\n    <div>\n      <Search>\n        <SearchBar />\n      </Search>\n      <CustomCard>\n        {data.currentConditions.WeatherText && (\n          <TopFlex>\n            <DisplayedCity>{data.currentConditions.cityName}</DisplayedCity>\n            <SelectedConditions>\n              <DisplayedCityConditions>\n                {data.currentConditions.WeatherText}\n              </DisplayedCityConditions>\n              <DisplayedCityConditions>\n                {convertTempUnit(\n                  unit === unitOptions[1],\n                  data.currentConditions.Temperature.Metric.Value\n                )}\n                °\n              </DisplayedCityConditions>\n            </SelectedConditions>\n            <SideBySide>\n              <SelectButton\n                value={unit}\n                options={unitOptions}\n                onChange={(e) => setUnit(e.value)}\n              />\n              <MyButton\n                onClick={() => makeFavorite(data.currentConditions)}\n                icon=\"pi pi-star-o\"\n                className={\n                  !cityFavorite\n                    ? 'p-button-rounded p-button-secondary p-button-outlined'\n                    : 'p-button-rounded p-button-secondary'\n                }\n              />\n            </SideBySide>\n          </TopFlex>\n        )}\n        <Devider />\n        <FiveDayForecast fahrenheit={unit === unitOptions[1]} />\n      </CustomCard>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  currentCity: state.data.currentConditions.cityName,\n});\n\nexport default connect(mapStateToProps, {\n  getWeather,\n  getCurrentConditions,\n})(WeatherPage);\n","/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport {\n  getFavoritesConditions,\n  getWeather,\n  getCurrentConditions,\n} from '../actions/clientActions';\n\nconst FavCity = Styled.div`\n    padding: 1.2rem;\n    margin: 15px;\n    border-radius: 5px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n    transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n    text-align: center;\n      @media (max-width: 400px){\n          display:flex;\n          justify-content:space-between;\n    }\n      :hover {\n          box-shadow: 0 14px 18px rgba(0,0,0,0.15), 0 5px 5px rgba(0,0,0,0.12);\n          border-radius: 5px;\n      @media (max-width: 400px){\n          display:flex;\n          justify-content:space-between;\n    }\n}\n`;\nconst Favorites = Styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n      @media (max-width: 400px){\n          display: flex;\n          flex-direction: column;\n      }\n`;\nconst Heading = Styled.div`\n    text-align: center;\n    font-size:var(--heading-2)\n`;\nconst CityName = Styled.div`\n    font-weight: 400;\n`;\nconst FavoritesPage = ({\n  getFavoritesConditions: getFavConditions,\n  favoritesConditions,\n  getWeather: getForecast,\n  getCurrentConditions: getCurrent,\n}) => {\n  const [favorites, setFavorites] = useLocalStorage('favorites');\n  const history = useHistory();\n\n  useEffect(() => {\n    getFavConditions(favorites);\n  }, []);\n\n  const convertCityName = (url) => {\n    const noStart = url.slice(31);\n    const index = noStart.indexOf('/');\n    const cityKebab = noStart.slice(0, index);\n    return cityKebab.replace('-', ' ');\n  };\n\n  const goToMain = (url) => {\n    const noStart = url.slice(63);\n    const index = noStart.indexOf('?');\n    const cityKey = noStart.slice(0, index);\n    getForecast(cityKey);\n    getCurrent(cityKey, convertCityName(url));\n    history.push('/');\n  };\n\n  return (\n    <div>\n      <Heading>\n        These are my favorites, There are many favorites like it but these are\n        mine\n      </Heading>\n      <Favorites>\n        {favoritesConditions.map((item, index) => (\n          <FavCity onClick={() => goToMain(item[0].MobileLink)} key={index}>\n            <CityName>{convertCityName(item[0].MobileLink)}</CityName>\n            <div>{item[0].WeatherText}</div>\n            <div>{item[0].Temperature.Metric.Value}°</div>\n          </FavCity>\n        ))}\n      </Favorites>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  favoritesConditions: state.data.favoritesConditions,\n  currentCity: state.data.currentConditions.cityName,\n});\n\nexport default connect(mapStateToProps, {\n  getFavoritesConditions,\n  getWeather,\n  getCurrentConditions,\n})(FavoritesPage);\n","import {\n  GET_WEATHER,\n  SUGGESTIONS,\n  CURRENT_CONDITIONS,\n  FAVORITES_CONDITIONS,\n} from '../actions/types';\n\nconst initialState = {\n  suggestions: [],\n  weeklyForecast: {},\n  currentConditions: {},\n  favoritesConditions: [],\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SUGGESTIONS:\n      return {\n        ...state,\n        suggestions: action.payload,\n      };\n    case GET_WEATHER:\n      return {\n        ...state,\n        weeklyForecast: action.payload,\n      };\n    case CURRENT_CONDITIONS:\n      return {\n        ...state,\n        currentConditions: action.payload,\n      };\n    case FAVORITES_CONDITIONS:\n      return {\n        ...state,\n        favoritesConditions: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clientReducer from './clientReducer';\n\nexport default combineReducers({\n  data: clientReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport WeatherPage from './components/WeatherPage';\nimport FavoritesPage from './components/FavoritesPage';\nimport store from './store';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/favorites\" component={FavoritesPage} />\n          <Route path=\"/\" component={WeatherPage} exact />\n        </Switch>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}